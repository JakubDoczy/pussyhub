# Use postgres/example user/password credentials
version: '3.9'

# To restart the database, use:
# docker-compose down --volumes
# docker compose up


services:

  db:
    container_name: pussyhub_db
    build: ./db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: db
      POSTGRES_PASSWORD: example
    user: postgres
#    expose:
#      - 5432
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
  adminer:
    image: pussyhub_adminer
    restart: always
    ports:
      - "127.0.0.1:8079:8080"
  smtp:
    container_name: pussyhub_smtp
    image: bytemark/smtp
    restart: always
  auth:
    container_name: pussyhub_auth
    build:
      context: ./
      dockerfile: auth-service/Dockerfile
    env_file:
      - ./.env
    ports:
      - "127.0.0.1:8089:8089"
    depends_on:
      smtp:
        condition: service_started
      db:
        condition: service_healthy
  api:
    container_name: pussyhub_api
    build:
      context: ./
      dockerfile: api-service/Dockerfile
    env_file:
      - ./.env
    ports:
      - "127.0.0.1:8001:8001"
    depends_on:
      db:
        condition: service_healthy
  client:
    container_name: pussyhub_client
    build:
      context: ./
      dockerfile: client/Dockerfile
    env_file:
      - ./.env
    ports:
      - "127.0.0.1:5100:5000"
    depends_on:
      db:
        condition: service_healthy
